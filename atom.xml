<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>BenArvin&#39;s blog</title>
  
  <subtitle>No code, no bug. No deploy, no error.</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://benarvin.github.io/"/>
  <updated>2018-12-29T08:40:36.127Z</updated>
  <id>https://benarvin.github.io/</id>
  
  <author>
    <name>Ben Arvin</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>算法学习之SBOM</title>
    <link href="https://benarvin.github.io/2018/12/28/%E7%AE%97%E6%B3%95%E5%AD%A6%E4%B9%A0%E4%B9%8BSBOM/"/>
    <id>https://benarvin.github.io/2018/12/28/算法学习之SBOM/</id>
    <published>2018-12-28T14:00:00.000Z</published>
    <updated>2018-12-29T08:40:36.127Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;SBOM算法的全称是Set Backward Oracle Matching，是一种基于子串的，使用了Factor
        
      
    
    </summary>
    
    
      <category term="Python" scheme="https://benarvin.github.io/tags/Python/"/>
    
      <category term="算法" scheme="https://benarvin.github.io/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>算法学习之Horspool</title>
    <link href="https://benarvin.github.io/2018/12/27/%E7%AE%97%E6%B3%95%E5%AD%A6%E4%B9%A0%E4%B9%8BHorspool/"/>
    <id>https://benarvin.github.io/2018/12/27/算法学习之Horspool/</id>
    <published>2018-12-27T14:00:00.000Z</published>
    <updated>2018-12-29T08:40:36.127Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;Horspool算法是&lt;a href=&quot;https://benarvintec.com/2018/12/24/算法学习之Boyer-Moore/&quot; target=&quot;_blank&quot;
        
      
    
    </summary>
    
    
      <category term="Python" scheme="https://benarvin.github.io/tags/Python/"/>
    
      <category term="算法" scheme="https://benarvin.github.io/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>算法学习之Boyer-Moore</title>
    <link href="https://benarvin.github.io/2018/12/24/%E7%AE%97%E6%B3%95%E5%AD%A6%E4%B9%A0%E4%B9%8BBoyer-Moore/"/>
    <id>https://benarvin.github.io/2018/12/24/算法学习之Boyer-Moore/</id>
    <published>2018-12-24T14:00:00.000Z</published>
    <updated>2018-12-29T08:40:36.127Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;Boyer-Moore算法网上的介绍比较多、比较详细，所以这里仅作为简单记录。该算法是基于后缀的字符串匹配算法，相较于KMP算法等基于前缀的算法来说，理论上效率是更高的。但实际上因为其匹配方式，主要是通过坏字符表、好后缀表进行跳转的，而对于很长的，或者缺少回文形式内容的模式
        
      
    
    </summary>
    
    
      <category term="Python" scheme="https://benarvin.github.io/tags/Python/"/>
    
      <category term="算法" scheme="https://benarvin.github.io/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>算法学习之KMP</title>
    <link href="https://benarvin.github.io/2018/12/18/%E7%AE%97%E6%B3%95%E5%AD%A6%E4%B9%A0%E4%B9%8BKMP/"/>
    <id>https://benarvin.github.io/2018/12/18/算法学习之KMP/</id>
    <published>2018-12-18T14:34:40.000Z</published>
    <updated>2018-12-29T08:40:36.127Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;KMP算法的全称叫Knuth-Morris-Pratt算法，是一种比较常见的，基于前缀的，单字符串匹配算法。&lt;/p&gt;
&lt;p&gt;对于这种算法，网上的各种解释介绍也很多，大多是从部分匹配表出发，来说明算法的构造使用方式，以及运行过程。所以咱们这一篇就不再重复介绍这部分了，而是从自
        
      
    
    </summary>
    
    
      <category term="Python" scheme="https://benarvin.github.io/tags/Python/"/>
    
      <category term="算法" scheme="https://benarvin.github.io/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>算法学习之Aho-Corasick</title>
    <link href="https://benarvin.github.io/2018/11/26/%E7%AE%97%E6%B3%95%E5%AD%A6%E4%B9%A0%E4%B9%8BAho-Corasick/"/>
    <id>https://benarvin.github.io/2018/11/26/算法学习之Aho-Corasick/</id>
    <published>2018-11-26T12:39:30.000Z</published>
    <updated>2018-12-29T08:40:36.127Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;因为目前网上各处对于Aho-Corasick算法，在关键点上的解释都太简单随便，实在不如我意，所以在此用自己的语言记录一遍。&lt;/p&gt;
&lt;p&gt;PS: 如果已经理解了该算法原理，或想要先拿到代码实现的话，请直接跳转至最后一节。&lt;/p&gt;
&lt;h1
        
      
    
    </summary>
    
    
      <category term="Python" scheme="https://benarvin.github.io/tags/Python/"/>
    
      <category term="算法" scheme="https://benarvin.github.io/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>iOS硬编码混淆</title>
    <link href="https://benarvin.github.io/2018/11/26/iOS%E7%A1%AC%E7%BC%96%E7%A0%81%E6%B7%B7%E6%B7%86/"/>
    <id>https://benarvin.github.io/2018/11/26/iOS硬编码混淆/</id>
    <published>2018-11-26T11:11:32.000Z</published>
    <updated>2018-12-29T08:40:36.127Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;在做iOS马甲包，或者加固的时候，我们需要进行代码混淆。目前比较成熟方便的解决方案，大多是采用&lt;a href=&quot;https://blog.csdn.net/yiyaaixuexi/article/details/29201699&quot; target=&quot;_blank&quot;
        
      
    
    </summary>
    
    
      <category term="iOS" scheme="https://benarvin.github.io/tags/iOS/"/>
    
      <category term="混淆" scheme="https://benarvin.github.io/tags/%E6%B7%B7%E6%B7%86/"/>
    
      <category term="加固" scheme="https://benarvin.github.io/tags/%E5%8A%A0%E5%9B%BA/"/>
    
      <category term="Clang" scheme="https://benarvin.github.io/tags/Clang/"/>
    
      <category term="Python" scheme="https://benarvin.github.io/tags/Python/"/>
    
      <category term="算法" scheme="https://benarvin.github.io/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>iOS分片下载器(一)</title>
    <link href="https://benarvin.github.io/2018/10/10/iOS%E5%88%86%E7%89%87%E4%B8%8B%E8%BD%BD%E5%99%A8%EF%BC%88%E4%B8%80%EF%BC%89/"/>
    <id>https://benarvin.github.io/2018/10/10/iOS分片下载器（一）/</id>
    <published>2018-10-10T04:00:00.000Z</published>
    <updated>2018-12-29T08:40:36.127Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;因为厌烦了日常项目里简陋、漏洞百出的HTTP下载器，所以想要封装固化一个稍微设计、性能好些的自用，然后就想不如干脆一步到位，整个支持断点续传、支持分片下载的下载器得了。&lt;/p&gt;
&lt;p&gt;而至于什么是断点续传，什么是分片下载，举两个例子：&lt;/p&gt;
&lt;p&gt;当你下载一个100MB大
        
      
    
    </summary>
    
    
      <category term="iOS" scheme="https://benarvin.github.io/tags/iOS/"/>
    
      <category term="设计" scheme="https://benarvin.github.io/tags/%E8%AE%BE%E8%AE%A1/"/>
    
      <category term="HTTP" scheme="https://benarvin.github.io/tags/HTTP/"/>
    
      <category term="文件下载" scheme="https://benarvin.github.io/tags/%E6%96%87%E4%BB%B6%E4%B8%8B%E8%BD%BD/"/>
    
      <category term="线程" scheme="https://benarvin.github.io/tags/%E7%BA%BF%E7%A8%8B/"/>
    
      <category term="性能" scheme="https://benarvin.github.io/tags/%E6%80%A7%E8%83%BD/"/>
    
  </entry>
  
  <entry>
    <title>代码设计二三事（一）</title>
    <link href="https://benarvin.github.io/2018/06/01/%E4%BB%A3%E7%A0%81%E8%AE%BE%E8%AE%A1%E4%BA%8C%E4%B8%89%E4%BA%8B%EF%BC%88%E4%B8%80%EF%BC%89/"/>
    <id>https://benarvin.github.io/2018/06/01/代码设计二三事（一）/</id>
    <published>2018-06-01T12:39:30.000Z</published>
    <updated>2018-12-29T08:40:36.127Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;对于代码设计，我们是有着一些规律、原则、方案去遵循的，比如大家常说的MVC、MVP、MVVM之类的架构，以及观察者模式、单例模式、装饰模式等等的经典设计模式。&lt;/p&gt;
&lt;p&gt;但到了实际项目里，该选用哪种架构、哪种设计模式，如何去设计自己的代码，说到底还是比较感性的。我们还是
        
      
    
    </summary>
    
    
      <category term="设计" scheme="https://benarvin.github.io/tags/%E8%AE%BE%E8%AE%A1/"/>
    
  </entry>
  
  <entry>
    <title>Jest测试框架使用记录（三）</title>
    <link href="https://benarvin.github.io/2018/04/23/Jest%E6%B5%8B%E8%AF%95%E6%A1%86%E6%9E%B6%E4%BD%BF%E7%94%A8%E8%AE%B0%E5%BD%95%EF%BC%88%E4%B8%89%EF%BC%89/"/>
    <id>https://benarvin.github.io/2018/04/23/Jest测试框架使用记录（三）/</id>
    <published>2018-04-23T02:32:32.000Z</published>
    <updated>2018-12-29T08:40:36.123Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;紧接着上一篇，这次介绍的是Enzyme库。Enzyme是airbnb公司开源的测试工具库，可以和mocha、jest、karma等许多测试框架搭配使用，不过在这里，我们还是和jest框架搭配。具体的安装配置，可以参照&lt;a
        
      
    
    </summary>
    
    
      <category term="React Native" scheme="https://benarvin.github.io/tags/React-Native/"/>
    
      <category term="Jest" scheme="https://benarvin.github.io/tags/Jest/"/>
    
  </entry>
  
  <entry>
    <title>Jest测试框架使用记录（二）</title>
    <link href="https://benarvin.github.io/2018/03/05/Jest%E6%B5%8B%E8%AF%95%E6%A1%86%E6%9E%B6%E4%BD%BF%E7%94%A8%E8%AE%B0%E5%BD%95%EF%BC%88%E4%BA%8C%EF%BC%89/"/>
    <id>https://benarvin.github.io/2018/03/05/Jest测试框架使用记录（二）/</id>
    <published>2018-03-05T03:58:17.000Z</published>
    <updated>2018-12-29T08:40:36.123Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;h1 id=&quot;1、覆盖率&quot;&gt;&lt;a href=&quot;#1、覆盖率&quot; class=&quot;headerlink&quot; title=&quot;1、覆盖率&quot;&gt;&lt;/a&gt;1、覆盖率&lt;/h1&gt;&lt;p&gt;运行&lt;code&gt;jest
        
      
    
    </summary>
    
    
      <category term="React Native" scheme="https://benarvin.github.io/tags/React-Native/"/>
    
      <category term="Jest" scheme="https://benarvin.github.io/tags/Jest/"/>
    
  </entry>
  
  <entry>
    <title>更好地封装React Native组件（一）</title>
    <link href="https://benarvin.github.io/2018/02/27/%E6%9B%B4%E5%A5%BD%E5%9C%B0%E5%B0%81%E8%A3%85React-Native%E7%BB%84%E4%BB%B6%EF%BC%88%E4%B8%80%EF%BC%89/"/>
    <id>https://benarvin.github.io/2018/02/27/更好地封装React-Native组件（一）/</id>
    <published>2018-02-27T09:32:42.000Z</published>
    <updated>2018-12-29T08:40:36.127Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;因为项目需要，前端时间封装了一个纯React Native端的，类似于iOS下UIActionSheet样式的，底部菜单弹窗组件&lt;a href=&quot;https://github.com/BenArvin/BAActionSheet&quot; target=&quot;_blank&quot;
        
      
    
    </summary>
    
    
      <category term="React Native" scheme="https://benarvin.github.io/tags/React-Native/"/>
    
  </entry>
  
  <entry>
    <title>WordPress建站和维护（一）</title>
    <link href="https://benarvin.github.io/2018/02/24/WordPress%E5%BB%BA%E7%AB%99%E5%92%8C%E7%BB%B4%E6%8A%A4%EF%BC%88%E4%B8%80%EF%BC%89/"/>
    <id>https://benarvin.github.io/2018/02/24/WordPress建站和维护（一）/</id>
    <published>2018-02-24T08:15:07.000Z</published>
    <updated>2018-12-29T08:40:36.123Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;h1 id=&quot;1、配置选择&quot;&gt;&lt;a href=&quot;#1、配置选择&quot; class=&quot;headerlink&quot; title=&quot;1、配置选择&quot;&gt;&lt;/a&gt;1、配置选择&lt;/h1&gt;&lt;p&gt;centOS + nginx + php-fpm + mySQL + WordPress&lt;/p&gt;
&lt;h1
        
      
    
    </summary>
    
    
      <category term="WordPress" scheme="https://benarvin.github.io/tags/WordPress/"/>
    
  </entry>
  
  <entry>
    <title>Jest测试框架使用记录（一）</title>
    <link href="https://benarvin.github.io/2018/02/23/Jest%E6%B5%8B%E8%AF%95%E6%A1%86%E6%9E%B6%E4%BD%BF%E7%94%A8%E8%AE%B0%E5%BD%95%EF%BC%88%E4%B8%80%EF%BC%89/"/>
    <id>https://benarvin.github.io/2018/02/23/Jest测试框架使用记录（一）/</id>
    <published>2018-02-23T07:33:19.000Z</published>
    <updated>2018-12-29T08:40:36.123Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;h1 id=&quot;1、基本配置&quot;&gt;&lt;a href=&quot;#1、基本配置&quot; class=&quot;headerlink&quot; title=&quot;1、基本配置&quot;&gt;&lt;/a&gt;1、基本配置&lt;/h1&gt;&lt;p&gt;使用react-native init方式新建的React
        
      
    
    </summary>
    
    
      <category term="React Native" scheme="https://benarvin.github.io/tags/React-Native/"/>
    
      <category term="Jest" scheme="https://benarvin.github.io/tags/Jest/"/>
    
  </entry>
  
  <entry>
    <title>自旋锁陷阱</title>
    <link href="https://benarvin.github.io/2018/02/19/%E8%87%AA%E6%97%8B%E9%94%81%E9%99%B7%E9%98%B1/"/>
    <id>https://benarvin.github.io/2018/02/19/自旋锁陷阱/</id>
    <published>2018-02-19T07:52:18.000Z</published>
    <updated>2018-12-29T08:40:36.127Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;之前ibireme大神写过一篇OSSpinLock不再安全的文章（&lt;a href=&quot;https://blog.ibireme.com/2016/01/16/spinlock_is_unsafe_in_ios/&quot; target=&quot;_blank&quot;
        
      
    
    </summary>
    
    
      <category term="线程" scheme="https://benarvin.github.io/tags/%E7%BA%BF%E7%A8%8B/"/>
    
      <category term="锁" scheme="https://benarvin.github.io/tags/%E9%94%81/"/>
    
  </entry>
  
  <entry>
    <title>优先级翻转</title>
    <link href="https://benarvin.github.io/2018/02/16/%E4%BC%98%E5%85%88%E7%BA%A7%E7%BF%BB%E8%BD%AC/"/>
    <id>https://benarvin.github.io/2018/02/16/优先级翻转/</id>
    <published>2018-02-16T11:21:43.000Z</published>
    <updated>2018-12-29T08:40:36.127Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;因为各个技术博客、论坛，对于优先级翻转的说明十分混乱，所以在此记录一下正确的解释。&lt;/p&gt;
&lt;p&gt;下图中，A、B、C为三条线程，优先级顺序为： C &amp;gt; B &amp;gt; A。其中，A和C对同一资源有竞争，B则无竞争。&lt;/p&gt;
&lt;p&gt;&lt;img
        
      
    
    </summary>
    
    
      <category term="线程" scheme="https://benarvin.github.io/tags/%E7%BA%BF%E7%A8%8B/"/>
    
      <category term="锁" scheme="https://benarvin.github.io/tags/%E9%94%81/"/>
    
  </entry>
  
</feed>
